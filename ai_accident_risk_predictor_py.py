# -*- coding: utf-8 -*-
"""AI accident risk predictor.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KjrS4RX9mUhGfvlmrFOIrg7G0bqpANpS
"""

!pip install streamlit pyngrok --quiet

app_code = """
import streamlit as st
import requests
from datetime import datetime

st.title('üåê Real-Time Accident Risk Estimation')

def get_weather_data(city, api_key):
    url = 'https://api.openweathermap.org/data/2.5/weather'
    params = {'q': city, 'appid': api_key, 'units': 'metric'}
    response = requests.get(url, params=params)
    if response.status_code != 200:
        return None
    data = response.json()
    weather_main = data['weather'][0]['main'].lower()
    timestamp = data['dt']
    local_time = datetime.utcfromtimestamp(timestamp + data['timezone'])

    if 'rain' in weather_main:
        weather_code = 1
        road_condition = 1  # Wet
    elif 'fog' in weather_main or 'mist' in weather_main:
        weather_code = 2
        road_condition = 1  # Also wet
    elif 'snow' in weather_main or 'ice' in weather_main:
        weather_code = 3
        road_condition = 2  # Icy
    else:
        weather_code = 0
        road_condition = 0  # Dry

    hour = local_time.hour
    if 0 <= hour < 6:
        time_code = 0
    elif 6 <= hour < 12:
        time_code = 1
    elif 12 <= hour < 18:
        time_code = 2
    else:
        time_code = 3

    return time_code, weather_code, road_condition

def predict_risk(time_of_day, weather, road_condition, traffic_volume):
    score = 0
    if time_of_day == 0:
        score += 2
    if weather > 0:
        score += weather * 1.5
    if road_condition > 0:
        score += road_condition * 2
    if traffic_volume > 200:
        score += 3
    elif traffic_volume > 100:
        score += 1
    if score >= 5:
        return 'High'
    elif score >= 3:
        return 'Medium'
    return 'Low'

api_key = st.text_input('Enter OpenWeatherMap API Key', type='password')
city = st.text_input('Enter City Name for Live Weather')

if city and api_key:
    result = get_weather_data(city, api_key)
    if result:
        time_code, weather_code, road_condition = result
        traffic_volume = st.slider('Traffic Volume (vehicles/hour)', 0, 500, 100)
        risk = predict_risk(time_code, weather_code, road_condition, traffic_volume)

        st.success(f'Predicted Accident Risk in {city}: **{risk}**')
        st.info(
            f'üå§Ô∏è Weather: {["Clear", "Rain", "Fog", "Snow"][weather_code]} '
            f'| üõ£Ô∏è Road: {["Dry", "Wet", "Icy"][road_condition]}'
        )
    else:
        st.error('Failed to fetch weather. Please check the city name or API key.')
"""

with open("app.py", "w") as f:
    f.write(app_code)

!ngrok config add-authtoken #your authentication token here

from pyngrok import ngrok
import threading

def run():
    !streamlit run app.py &

public_url = ngrok.connect(8501)
threading.Thread(target=run).start()

print(f"Streamlit app running at: {public_url}")
